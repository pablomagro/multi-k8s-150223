name: Build and Deploy to GKE - CI

on:
  push:
    branches:
      - master
      # - feature/*

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.CLUSTER_NAME }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  # DEPLOYMENT_NAME: gke-test # Add your deployment name here.
  # IMAGE: static-site

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      # uses: actions/checkout@v2
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |
        gcloud --quiet auth configure-docker
        gcloud components update kubectl

    - name: Cache Docker image
      uses: actions/cache@v2
      with:
        path: ~/.docker
        key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile*') }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Login in Docker
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build and test Docker server image.
      run: |
        docker build -t pmagas/react-test -f ./client/Dockerfile.dev ./client
        docker run -e CI=true pmagas/react-test npm run test-cov

    - name: Set environment variable
      run: echo "CLOUDSDK_CORE_DISABLE=1" >> $GITHUB_ENV
    - name: Deploy the Docker image to the GKE cluster
      env:
        DEPLOY_DIRECTORY = .github/workflows
        DEPLOY_SCRIPT = $DEPLOY_DIRECTORY/deploy.sh
      run: |
        chmod 700 $DEPLOY_SCRIPT
        ./$DEPLOY_SCRIPT

