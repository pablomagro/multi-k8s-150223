name: Build and Deploy to GKE - CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  # Allow you to run this workflow manually from the Actions tab
  # workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.CLUSTER_NAME }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  K8S_DEPLOY_SCRIPT: .github/workflows/deploy-k8s.sh
  DOCKER_HUB_DEPLOY_SCRIPT: .github/workflows/deploy-docker-hub.sh
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  setup-build-test:
    name: Setup, Build, and Test
    runs-on: ubuntu-latest

    steps:
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: ~/.cache/docker
        key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}

    - name: Build and Test Docker server image.
      run: |
        docker build -t $DOCKER_USERNAME/react-test -f ./client/Dockerfile.dev ./client
        docker run -e CI=true $DOCKER_USERNAME/react-test npm run test-cov

  build-push-to-Docker-Hub:
    needs: [setup-build-test]
    name: Setup, Build and Publish to Docker Hab
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login in Docker
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build and push to Docker Hub
      run: |
        chmod 744 $DOCKER_HUB_DEPLOY_SCRIPT
        bash ./$DOCKER_HUB_DEPLOY_SCRIPT

  deploy-to-GC-K8s-cluster:
    needs: [build-push-to-Docker-Hub]
    name: Setup, Build and Publish to Docker Hab
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: Set environment variable
      run: echo "CLOUDSDK_CORE_DISABLE=1" >> $GITHUB_ENV

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    # - name: Get the GKE credentials
    #   uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
    #   with:
    #     cluster_name: ${{ env.GKE_CLUSTER }}
    #     location: ${{ env.GKE_ZONE }}
    #     credentials: ${{ secrets.GKE_SA_KEY }}

    # - name: Deploy the Docker image to the GKE cluster
    #   run: |
    #     chmod 744 $K8S_DEPLOY_SCRIPT
    #     bash ./$K8S_DEPLOY_SCRIPT

